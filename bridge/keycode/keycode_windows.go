package keycode

import "golang.design/x/hotkey"

func init() {
	strToKeyCode["WINDOWS"] = SuperLeft
	strToKeyCode["WIN"] = SuperLeft
	strToKeyCode["WINLEFT"] = SuperLeft
	strToKeyCode["WINRIGHT"] = SuperRight
}

func HotkeyModifier(code KeyCode) hotkey.Modifier {
	return map[KeyCode]hotkey.Modifier{
		AltLeft:      hotkey.ModAlt,
		AltRight:     hotkey.ModAlt,
		ControlLeft:  hotkey.ModCtrl,
		ControlRight: hotkey.ModCtrl,
		ShiftLeft:    hotkey.ModShift,
		ShiftRight:   hotkey.ModShift,
		SuperLeft:    hotkey.ModWin,
		SuperRight:   hotkey.ModWin,
	}[code]
}

func Scancode(k KeyCode) uint16 {
	return map[KeyCode]uint16{
		Digit0:       0x00B,
		Digit1:       0x002,
		Digit2:       0x003,
		Digit3:       0x004,
		Digit4:       0x005,
		Digit5:       0x006,
		Digit6:       0x007,
		Digit7:       0x008,
		Digit8:       0x009,
		Digit9:       0x00A,
		KeyA:         0x01E,
		KeyB:         0x030,
		KeyC:         0x02E,
		KeyD:         0x020,
		KeyE:         0x012,
		KeyF:         0x021,
		KeyG:         0x022,
		KeyH:         0x023,
		KeyI:         0x017,
		KeyJ:         0x024,
		KeyK:         0x025,
		KeyL:         0x026,
		KeyM:         0x032,
		KeyN:         0x031,
		KeyO:         0x018,
		KeyP:         0x019,
		KeyQ:         0x010,
		KeyR:         0x013,
		KeyS:         0x01F,
		KeyT:         0x014,
		KeyU:         0x016,
		KeyV:         0x02F,
		KeyW:         0x011,
		KeyX:         0x02D,
		KeyY:         0x015,
		KeyZ:         0x02C,
		Quote:        0x028,
		Backslash:    0x02B,
		Comma:        0x033,
		Equal:        0x00D,
		Backquote:    0x029,
		BracketLeft:  0x01A,
		Minus:        0x00C,
		Period:       0x034,
		BracketRight: 0x01B,
		Semicolon:    0x027,
		Slash:        0x035,
		Backspace:    0x00E,
		Delete:       0x153,
		End:          0x14F,
		Enter:        0x01C,
		Escape:       0x001,
		Home:         0x147,
		Insert:       0x152,
		// Menu:           0x15D,
		PageDown:       0x151,
		PageUp:         0x149,
		Pause:          0x045,
		Space:          0x039,
		Tab:            0x00F,
		CapsLock:       0x03A,
		NumLock:        0x145,
		ScrollLock:     0x046,
		F1:             0x03B,
		F2:             0x03C,
		F3:             0x03D,
		F4:             0x03E,
		F5:             0x03F,
		F6:             0x040,
		F7:             0x041,
		F8:             0x042,
		F9:             0x043,
		F10:            0x044,
		F11:            0x057,
		F12:            0x058,
		F13:            0x064,
		F14:            0x065,
		F15:            0x066,
		F16:            0x067,
		F17:            0x068,
		F18:            0x069,
		F19:            0x06A,
		F20:            0x06B,
		F21:            0x06C,
		F22:            0x06D,
		F23:            0x06E,
		F24:            0x076,
		AltLeft:        0x038,
		ControlLeft:    0x01D,
		ShiftLeft:      0x02A,
		SuperLeft:      0x15B,
		PrintScreen:    0x137,
		AltRight:       0x138,
		ControlRight:   0x11D,
		ShiftRight:     0x036,
		SuperRight:     0x15C,
		ArrowDown:      0x150,
		ArrowLeft:      0x14B,
		ArrowRight:     0x14D,
		ArrowUp:        0x148,
		Numpad0:        0x052,
		Numpad1:        0x04F,
		Numpad2:        0x050,
		Numpad3:        0x051,
		Numpad4:        0x04B,
		Numpad5:        0x04C,
		Numpad6:        0x04D,
		Numpad7:        0x047,
		Numpad8:        0x048,
		Numpad9:        0x049,
		NumpadAdd:      0x04E,
		NumpadDecimal:  0x053,
		NumpadDivide:   0x135,
		NumpadEnter:    0x11C,
		NumpadEqual:    0x059,
		NumpadMultiply: 0x037,
		NumpadSubtract: 0x04A,
	}[k]
}

func FromScancode(c uint16) KeyCode {
	return map[uint16]KeyCode{
		0x00B: Digit0,
		0x002: Digit1,
		0x003: Digit2,
		0x004: Digit3,
		0x005: Digit4,
		0x006: Digit5,
		0x007: Digit6,
		0x008: Digit7,
		0x009: Digit8,
		0x00A: Digit9,

		0x01E: KeyA,
		0x030: KeyB,
		0x02E: KeyC,
		0x020: KeyD,
		0x012: KeyE,
		0x021: KeyF,
		0x022: KeyG,
		0x023: KeyH,
		0x017: KeyI,
		0x024: KeyJ,
		0x025: KeyK,
		0x026: KeyL,
		0x032: KeyM,
		0x031: KeyN,
		0x018: KeyO,
		0x019: KeyP,
		0x010: KeyQ,
		0x013: KeyR,
		0x01F: KeyS,
		0x014: KeyT,
		0x016: KeyU,
		0x02F: KeyV,
		0x011: KeyW,
		0x02D: KeyX,
		0x015: KeyY,
		0x02C: KeyZ,

		0x028: Quote,
		0x02B: Backslash,
		0x033: Comma,
		0x00D: Equal,
		0x029: Backquote, // NOTE(nick): grave key `
		0x01A: BracketLeft,
		0x00C: Minus,
		0x034: Period,
		0x01B: BracketRight,
		0x027: Semicolon,
		0x035: Slash,
		// 0x056: GLFW_WORLD_KEY_2,

		0x00E: Backspace,
		0x153: Delete,
		0x14F: End,
		0x01C: Enter,
		0x001: Escape,
		0x147: Home,
		0x152: Insert,
		// 0x15D: Menu,
		0x151: PageDown,
		0x149: PageUp,
		0x045: Pause,
		0x039: Space,
		0x00F: Tab,
		0x03A: CapsLock,
		0x145: NumLock,
		0x046: ScrollLock,

		0x03B: F1,
		0x03C: F2,
		0x03D: F3,
		0x03E: F4,
		0x03F: F5,
		0x040: F6,
		0x041: F7,
		0x042: F8,
		0x043: F9,
		0x044: F10,
		0x057: F11,
		0x058: F12,
		0x064: F13,
		0x065: F14,
		0x066: F15,
		0x067: F16,
		0x068: F17,
		0x069: F18,
		0x06A: F19,
		0x06B: F20,
		0x06C: F21,
		0x06D: F22,
		0x06E: F23,
		0x076: F24,

		0x038: AltLeft,
		0x01D: ControlLeft,
		0x02A: ShiftLeft,
		0x15B: SuperLeft,
		0x137: PrintScreen,
		0x138: AltRight,
		0x11D: ControlRight,
		0x036: ShiftRight,
		0x15C: SuperRight,
		0x150: ArrowDown,
		0x14B: ArrowLeft,
		0x14D: ArrowRight,
		0x148: ArrowUp,

		0x052: Numpad0,
		0x04F: Numpad1,
		0x050: Numpad2,
		0x051: Numpad3,
		0x04B: Numpad4,
		0x04C: Numpad5,
		0x04D: Numpad6,
		0x047: Numpad7,
		0x048: Numpad8,
		0x049: Numpad9,
		0x04E: NumpadAdd,
		0x053: NumpadDecimal,
		0x135: NumpadDivide,
		0x11C: NumpadEnter,
		0x059: NumpadEqual,
		0x037: NumpadMultiply,
		0x04A: NumpadSubtract,
	}[c]
}
